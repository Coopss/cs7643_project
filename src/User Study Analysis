{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"User Study Analysis","provenance":[],"authorship_tag":"ABX9TyNss6PWF28/mUpfuq44IJ1v"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"An6zXpKXEmCQ","executionInfo":{"status":"ok","timestamp":1620232511891,"user_tz":240,"elapsed":34376,"user":{"displayName":"Ryan Cooper","photoUrl":"","userId":"03930546846624815383"}},"outputId":"18840aae-9552-46e5-d500-14545944461a"},"source":["import pickle\n","import csv\n","import sklearn\n","import nltk\n","from nltk import agreement\n","import numpy as np\n","from google.colab import drive\n","import matplotlib.pyplot as plt\n","\n","!pip install krippendorff\n","import krippendorff\n","\n","drive.mount('/content/gdrive')"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Collecting krippendorff\n","  Downloading https://files.pythonhosted.org/packages/9f/8f/89453f18f3971677c4876405e3c511f84dbd86cfe4fa513b004a4d2b22cc/krippendorff-0.4.0-py3-none-any.whl\n","Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from krippendorff) (1.19.5)\n","Installing collected packages: krippendorff\n","Successfully installed krippendorff-0.4.0\n","Mounted at /content/gdrive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"p50TBKTZEr6A","executionInfo":{"status":"ok","timestamp":1620241872890,"user_tz":240,"elapsed":243,"user":{"displayName":"Ryan Cooper","photoUrl":"","userId":"03930546846624815383"}}},"source":["data = []\n","csv_data = []\n","\n","\n","with open('/content/gdrive/My Drive/GPT-2 AI Text Generation User Study.csv') as f:\n","  reader = csv.DictReader(f)\n","  for row in reader:\n","    user_data = []\n","\n","    for k in list(sorted(row.keys())):\n","      if '[Score]' in k:\n","        score, possible = [int(float(x.strip())) for x in row[k].split('/')]\n","        user_data.append(score)\n","\n","    data.append(user_data)\n","    csv_data.append(row)\n","\n","classes = [x for x in sorted(csv_data[0].keys()) if '[Feedback]' not in x and '[Score]' not in x and 'Timestamp' not in x and 'Total score' not in x]\n","data = np.array(data)"],"execution_count":14,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MqnNplrlOEhO","executionInfo":{"status":"ok","timestamp":1620241873808,"user_tz":240,"elapsed":217,"user":{"displayName":"Ryan Cooper","photoUrl":"","userId":"03930546846624815383"}},"outputId":"18bc7808-cd5b-4da7-bf02-3b8f3db4f4e8"},"source":["data"],"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0, 1, 1, ..., 0, 0, 0],\n","       [0, 0, 1, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 0, 0],\n","       ...,\n","       [0, 1, 1, ..., 0, 0, 0],\n","       [0, 0, 1, ..., 0, 0, 0],\n","       [1, 0, 0, ..., 0, 0, 0]])"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Xeqb8HYqK0V-","executionInfo":{"status":"ok","timestamp":1620241874554,"user_tz":240,"elapsed":246,"user":{"displayName":"Ryan Cooper","photoUrl":"","userId":"03930546846624815383"}},"outputId":"29a6c90b-45da-4618-e8b7-49ee5506f38e"},"source":["# for i in range(data.shape[1]):\n","  # foo = np.array([data[:,i]]).T\n","  # print(foo.shape)\n","  # print(krippendorff.alpha(value_counts =foo))\n","krippendorff.alpha(reliability_data=data)"],"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.03701195704744953"]},"metadata":{"tags":[]},"execution_count":16}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6dCQIq7oQiSk","executionInfo":{"status":"ok","timestamp":1620242344471,"user_tz":240,"elapsed":564,"user":{"displayName":"Ryan Cooper","photoUrl":"","userId":"03930546846624815383"}},"outputId":"9d966bb5-7de9-4b4d-aee3-db7195bb7137"},"source":["# accurcies = []\n","for i, c in enumerate(data.T):\n","  print(i, ',' , round(c.mean(), 4), ',', c.sum())"],"execution_count":19,"outputs":[{"output_type":"stream","text":["0 , 0.3768 , 52\n","1 , 0.442 , 61\n","2 , 0.3043 , 42\n","3 , 0.6014 , 83\n","4 , 0.2029 , 28\n","5 , 0.3406 , 47\n","6 , 0.3913 , 54\n","7 , 0.4855 , 67\n","8 , 0.442 , 61\n","9 , 0.4203 , 58\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EWJPjJjfhPLx","executionInfo":{"status":"ok","timestamp":1620242345239,"user_tz":240,"elapsed":239,"user":{"displayName":"Ryan Cooper","photoUrl":"","userId":"03930546846624815383"}},"outputId":"bf9dccc4-7f04-412e-c215-4d202a0d0ae8"},"source":["data.mean() * 10"],"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4.007246376811594"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yAypQfU2QlEj","executionInfo":{"status":"ok","timestamp":1620180478464,"user_tz":240,"elapsed":340,"user":{"displayName":"Ryan Cooper","photoUrl":"","userId":"03930546846624815383"}},"outputId":"24ff0aa9-306e-46bd-fa1d-c93e9d46a7ca"},"source":["for i, c in enumerate(classes):\n","  print(i, ',', c)"],"execution_count":119,"outputs":[{"output_type":"stream","text":["0 , After a year without Instagram or Facebook, Iâ€™m shocked that I ever shared personal details of my day with hundreds of people.\n","1 , An old friend committed suicide yesterday.\n","2 , As of this morning I am a published author!\n","3 , Ate a banana with the peel.\n","4 , How was your day, Reddit?\n","5 , I asked for a raise and I got it.\n","6 , I just had a fresh mango for the first time in my life.\n","7 , I showed up late for work yesterday and everyone was genuinely happy to see me.\n","8 , Is anyone else going to continue to wear a mask after the mandate is lifted?\n","9 , Is it bad to visit our parents way to often?\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":317},"id":"a6RAt93USAWq","executionInfo":{"status":"ok","timestamp":1620180673991,"user_tz":240,"elapsed":1250,"user":{"displayName":"Ryan Cooper","photoUrl":"","userId":"03930546846624815383"}},"outputId":"2173df98-3bdc-45a1-8a01-bb30debd5d48"},"source":["plt.hist([sum(x) for x in data])"],"execution_count":123,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([ 1., 11., 14.,  7.,  9.,  7.,  5.,  5.,  6.,  1.]),\n"," array([0. , 0.9, 1.8, 2.7, 3.6, 4.5, 5.4, 6.3, 7.2, 8.1, 9. ]),\n"," <a list of 10 Patch objects>)"]},"metadata":{"tags":[]},"execution_count":123},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"706OTBjHSyCa"},"source":[""],"execution_count":null,"outputs":[]}]}